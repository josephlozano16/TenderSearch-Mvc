@model IPagedList

@{
    ViewBag.TargetTableBody = ViewData["TargetTableBody"];
    ViewBag.PageContainer = ViewData["PageContainer"];
    ViewBag.IsTableContainer = ViewData["IsTableContainer"];

    ViewBag.ParentId = ViewData["ParentId"];
    ViewBag.searchTerm = ViewData["searchTerm"];
    ViewBag.PAGE_SIZE = ViewData["PAGE_SIZE"];
    ViewBag.ControllerName = ViewData["ControllerName"];
    ViewBag.ReturnToParentListURL = ViewData["ReturnToParentListURL"];
    if (ViewBag.TargetTableBody == null) { ViewBag.TargetTableBody = "pagedTable"; }
    if (ViewBag.PageContainer == null) { ViewBag.PageContainer = "pageContainer"; }
}
<div class="pagedList" data-qpse-targettablebody="#@ViewBag.TargetTableBody" data-qpse-pagecontainer="#@ViewBag.PageContainer">
    @{

        if (Model != null)
        {
            if (Model.PageCount > 1)
            {
                @Html.PagedListPager(Model, page => Url.Action("Index", @ViewBag.ControllerName,
                                                            new { @ParentId = ViewBag.ParentId, @searchTerm = ViewBag.searchTerm, page = page, @ReturnToParentListURL = @ViewBag.ReturnToParentListURL }),
                                                            new PagedListRenderOptions
                                                            {
                                                                FunctionToDisplayEachPageNumber = page => ((page - 1) * ViewBag.PAGE_SIZE + 1).ToString() + "-" + ((((page - 1) * ViewBag.PAGE_SIZE) + ViewBag.PAGE_SIZE) >= Model.TotalItemCount ? Model.TotalItemCount : (((page - 1) * ViewBag.PAGE_SIZE) + ViewBag.PAGE_SIZE)).ToString(),
                                                                MaximumPageNumbersToDisplay = 5
                                                            })
            }
        }
    }

    <span id="busyindicatorPaging" style="display:none;">
        @Html.Partial("_BusyIndicatorSmall")
    </span>
</div>

@{
    if (Model != null && Model.PageCount <= 1 && ViewBag.IsTableContainer == true)
    {
        <p class="text-info">
          &nbsp;<i class="fa fa-info-circle animated rubberBand bounce "></i> <span>@string.Format("{0} row(s) found.", Model.TotalItemCount)</span> 
        </p>
    }
}
