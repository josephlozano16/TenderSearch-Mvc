@model  ContactPerson

@{
    var VM = new VmContactPerson(Model);
    var fieldClassColumns = 10;
    int? labelClassColumns = 2;
    ViewBag.LabelClassColumns = ViewData["LabelClassColumns"];
    if (ViewBag.LabelClassColumns != null) { labelClassColumns = 4; } //replace labelClassColumns = 4 if you need to increase values

    fieldClassColumns = 12 - labelClassColumns.Value;
    ViewBag.FieldClass = string.Format("col-md-{0} col-xs-12", fieldClassColumns);
    ViewBag.LabelClass = string.Format("col-md-{0}", labelClassColumns.Value);
}


@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label " + @ViewBag.LabelClass })
    <div class="@ViewBag.FieldClass">
        @{
            if (!VM.HasParent())
            {
                @Html.DropDownListFor(model => model.CompanyId,
                                              VM.GetCompanies(),
                                            htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
            }
            else
            {
                @Html.HiddenFor(model => model.CompanyId)
                @Html.HiddenFor(model => model.Company.Website)
                @Html.HiddenFor(model => model.Company.AbnCan)
                @Html.HiddenFor(model => model.Company.Id)
                @Html.EditorFor(model => model.Company.Name,
                           new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control",
                                   @readonly = true
                               }
                           })
            }
        }
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.PositionTitleId,  htmlAttributes: new { @class = "control-label " + @ViewBag.LabelClass })
    <div class="@ViewBag.FieldClass">
        @Html.DropDownListFor(model => model.PositionTitleId,
            VM.GetPositionTitles(),
            htmlAttributes: new {@class = "form-control" })

        @Html.ValidationMessageFor(model => model.PositionTitleId, "", new {@class = "text-danger " })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label " + @ViewBag.LabelClass })
    <div class="@ViewBag.FieldClass">
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label " + @ViewBag.LabelClass })
    <div class="@ViewBag.FieldClass">
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ContractType, htmlAttributes: new { @class = "control-label " + @ViewBag.LabelClass })
    <div class="@ViewBag.FieldClass">
        @Html.DropDownListFor(model => model.ContractType,
            VmContactPerson.GetContractTypes(),
            htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ContractType, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " + @ViewBag.LabelClass })
    <div class="@ViewBag.FieldClass">
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label " + @ViewBag.LabelClass })
    <div class="@ViewBag.FieldClass">
        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label " + @ViewBag.LabelClass })
    <div class="@ViewBag.FieldClass">
        @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    <label class="control-label @ViewBag.LabelClass"  ></label>
    <div class="@ViewBag.FieldClass">
        <div class="checkbox">
            @Html.Bootstrap().CheckBoxFor(model => model.IsActive)
            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
        </div>
    </div>
</div>





